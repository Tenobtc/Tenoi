
int deinit() {
   return (0);
}

// EA2B2676C28C0DB2636C6B92
int start() {
   double Lda_60[100];
   int Li_0 = IndicatorCounted();
   int Li_4 = 7;
   double Ld_8 = 7.0;

   double Ld_36 = 0;
   double Ld_44 = 0;
   double Ld_52 = 0;
   int Li_64 = 0;
   double Ld_68 = 0;
   int Li_76 = 0;
   double Ld_80 = 0;
   double Ld_88 = 0;
   double Ld_96 = 0;
   int Li_104 = 0;
   int Li_108 = 0;
   double Ld_112 = 0;
   double Ld_120 = 2;
   double Ld_128 = 10;
   double Ld_136 = 0;
   double Ld_144 = 0;
   double Ld_152 = 0;
   double Ld_160 = 0;
   double Ld_168 = 0;
   double Ld_176 = 0;
   double Ld_184 = 0;
   double Ld_192 = 0;
   double Ld_200 = 0;
   double Ld_208 = 0;
   double Ld_216 = 0;
   double Ld_224 = 0;
   double Ld_232 = 0;
   double Ld_240 = 0;
   double Ld_248 = 0;
   double Ld_256 = 0;
   double Ld_264 = 0;
   double Ld_272 = 0;
   double Ld_280 = 0;
   double Ld_288 = 0;
   double Ld_296 = 0;
   double Ld_304 = 0;
   double Ld_312 = 0;
   double Ld_320 = 0;
   double Ld_328 = 0;
   if (Bars < NumBars) Li_24 = Bars;
   else Li_24 = NumBars;
   if (Close[Li_24 - 2] > Close[Li_24 - 1]) Li_32 = TRUE;
   else Li_32 = FALSE;
   Ld_36 = Close[Li_24 - 2];
   for (Li_28 = Li_24 - 3; Li_28 >= 0; Li_28--) {
      Ld_52 = Gd_96 + High[Li_28] - Low[Li_28];
      if (MathAbs(Gd_96 + High[Li_28] - (Close[Li_28 + 1])) > Ld_52) Ld_52 = MathAbs(Gd_96 + High[Li_28] - (Close[Li_28 + 1]));
      if (MathAbs(Low[Li_28] - (Close[Li_28 + 1])) > Ld_52) Ld_52 = MathAbs(Low[Li_28] - (Close[Li_28 + 1]));
      if (Li_28 == Li_24 - 3) for (Li_76 = 0; Li_28 <= Li_4 - 1; Li_76++) Lda_60[Li_76] = Ld_52;
      Lda_60[Li_64] = Ld_52;
      Ld_68 = 0;
      Ld_80 = Li_4;
      Li_108 = Li_64;
      for (Li_76 = 0; Li_76 <= Li_4 - 1; Li_76++) {
         Ld_68 += Lda_60[Li_108] * Ld_80;
         Ld_80 -= 1.0;
         Li_108--;
         if (Li_108 == -1) Li_108 = Li_4 - 1;
      }
      Ld_68 = 2.0 * Ld_68 / (Ld_8 * (Ld_8 + 1.0));
      Li_64++;
      if (Li_64 == Li_4) Li_64 = 0;
      Ld_44 = Ld_16 * Ld_68;
      if (Li_32 && Low[Li_28] < Ld_36 - Ld_44) {
         Li_32 = FALSE;
         Ld_36 = Gd_96 + High[Li_28];
      }
      if ((!Li_32) && Gd_96 + High[Li_28] > Ld_36 + Ld_44) {
         Li_32 = TRUE;
         Ld_36 = Low[Li_28];
      }
      if (Li_32 && Low[Li_28] > Ld_36) Ld_36 = Low[Li_28];
      if ((!Li_32) && Gd_96 + High[Li_28] < Ld_36) Ld_36 = Gd_96 + High[Li_28];
      Ld_112 = iATR(NULL, 0, 10, Li_28);
      Ld_136 = 0;
      Ld_144 = 0;
      if (Li_32) {
         if (Li_104 != 1) Ld_96 = Low[Li_28] - Ld_112 * Ld_120 / 3.0;
         if (Li_104 == 1) Ld_96 = -1.0;
         if (Ld_96 > 0.0) {
            Ld_136 = Ld_96;
            Ld_144 = 0;
         } else {
            Ld_136 = 0;
            Ld_144 = 0;
         }
         Gda_88[Li_28] = Ld_136;
         Li_104 = 1;
      } else {
         if (Li_104 != 2) Ld_96 = Gd_96 + High[Li_28] + Ld_112 * Ld_120 / 3.0;
         if (Li_104 == 2) Ld_96 = -1.0;
         if (Ld_96 > 0.0) {
            Ld_136 = 0;
            Ld_144 = Ld_96;
         } else {
            Ld_136 = 0;
            Ld_144 = 0;
         }
         Gda_92[Li_28] = Ld_144;
         Li_104 = 2;
      }
   }
   if (EnableAlerts == 1) {
      if (Ld_136 > 0.0 && Gd_104 != 1.0) {
         Gd_104 = 1;
         Alert(Symbol(), " ", Period(), " Alert!! ", "BUY NOW !!");
      }
      if (Ld_144 > 0.0 && Gd_104 != 2.0) {
         Gd_104 = 2;
         Alert(Symbol(), " ", Period(), " Alert!! ", "SELL NOW !!");
      }
   }
   return (0);
}

         }
         Gda_88[Li_28] = Ld_136;
         Li_104 = 1;
      } else {
         if (Li_104 != 2) Ld_96 = Gd_96 + High[Li_28] + Ld_112 * Ld_120 / 3.0;
         if (Li_104 == 2) Ld_96 = -1.0;
         if (Ld_96 > 0.0) {
            Ld_136 = 0;
            Ld_144 = Ld_96;
         } else {
            Ld_136 = 0;
            Ld_144 = 0;
         }
         Gda_92[Li_28] = Ld_144;
         Li_104 = 2;


                  }
         Gda_88[Li_28] = Ld_136;
         Li_104 = 1;
      } else {
         if (Li_104 != 2) Ld_96 = Gd_96 + High[Li_28] + Ld_112 * Ld_120 / 3.0;
         if (Li_104 == 2) Ld_96 = -1.0;
         if (Ld_96 > 0.0) {
            Ld_136 = 0;
            Ld_144 = Ld_96;
         } else {
            Ld_136 = 0;
            Ld_144 = 0;
         }
         Gda_92[Li_28] = Ld_144;
         Li_104 = 2;


                  }
         Gda_88[Li_28] = Ld_136;
         Li_104 = 1;
      } else {
         if (Li_104 != 2) Ld_96 = Gd_96 + High[Li_28] + Ld_112 * Ld_120 / 3.0;
         if (Li_104 == 2) Ld_96 = -1.0;
         if (Ld_96 > 0.0) {
            Ld_136 = 0;
            Ld_144 = Ld_96;
         } else {
            Ld_136 = 0;
            Ld_144 = 0;
         }
         Gda_92[Li_28] = Ld_144;
         Li_104 = 2;
